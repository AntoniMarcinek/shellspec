language: sh
env:
  global:
    - HOMEBREW_NO_AUTO_UPDATE=1
    - PATH=${PATH}:${HOME}/kcov/bin
addons:
  apt:
    update: true
  homebew:
    update: true
matrix:
  include:
    - os: linux # Ubuntu 12.04
      dist: precise
      env: OS="Ubuntu 12.04" PACKAGES="dash bash zsh ksh mksh yash posh busybox"
    - os: linux # Ubuntu 14.04
      dist: trusty
      env: OS="Ubuntu 14.04" PACKAGES="dash bash zsh ksh mksh yash posh busybox"
    - os: linux # Ubuntu 16.04
      dist: xenial
      env: OS="Ubuntu 16.04" PACKAGES="dash bash zsh ksh mksh yash posh busybox"
    - os: linux # Ubuntu 18.04
      dist: bionic
      env: OS="Ubuntu 18.04" PACKAGES="dash bash zsh ksh mksh yash posh busybox" COVERAGE=1
    - os: osx # macOS 10.10 Yosemite 2014-06
      osx_image: xcode6.4
      env: OS="macOS 10.10" SHELLS="bash zsh ksh"
    - os: osx # macOS 10.11 El Capitan 2015-06
      osx_image: xcode8
      env: OS="macOS 10.11" SHELLS="bash zsh ksh"
    - os: osx # macOS 10.12 Sierra 2016-06
      osx_image: xcode9.2
      env: OS="macOS 10.12" SHELLS="bash zsh ksh"
    - os: osx # macOS 10.13 High Sierra 2017-06
      osx_image: xcode10.1
      env: OS="macOS 10.13" SHELLS="bash zsh ksh"
    - os: osx # macOS 10.14 Mojave 2018-06
      osx_image: xcode10.2
      env: OS="macOS 10.14" SHELLS="bash zsh ksh"
    - os: osx  # macOS 10.14 Mojave 2018-06
      osx_image: xcode10.2
      env: OS="macOS 10.14" FORMULAS="dash bash zsh ksh mksh yash"
before_install:
  - if [ "$PACKAGES" ]; then sudo apt-get install -y $PACKAGES; fi
  - if [ "$FORMULAS" ]; then brew install $FORMULAS; fi
before_script:
  - |
      if [ "$COVERAGE" ]; then
        sudo apt-get install -y libcurl4-openssl-dev zlib1g-dev libdw-dev libiberty-dev
        wget https://github.com/SimonKagstrom/kcov/archive/v36.tar.gz
        tar zxvf v36.tar.gz
        cd kcov-36
        cmake -DCMAKE_INSTALL_PREFIX=${HOME}/kcov .
        make -j4
        make -j4 install
        cd ..
      fi
  - ./shellspec --task fixture:stat:prepare
script:
  - contrib/all.sh contrib/various_test.sh
  - if [ "$COVERAGE" ]; then ./shellspec --kcov --kcov-options "--coveralls-id=${TRAVIS_JOB_ID}"; fi
after_success:
  - if [ "$COVERAGE" ]; then bash <(curl -s https://codecov.io/bash) -s coverage; fi
